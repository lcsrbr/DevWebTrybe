/* function soma (a,b) {

    return a+b;
}

console.log(soma(15,2));
console.log(soma(20,15));
console.log(soma(3,1));
console.log(soma(1,9));
console.log(soma(7,5)); */

/* 
Pegue cada um dos exercÃ­cios de 1 a 5 do final do dia 4.1 e faÃ§a com que todos eles sejam funÃ§Ãµes de um mesmo arquivo. As variÃ¡veis que vocÃª define no comeÃ§o de cada arquivo devem ser removidas e transformadas em parÃ¢metros das funÃ§Ãµes.
ApÃ³s refatorar o seu cÃ³digo , verifique se ele ainda estÃ¡ funcionando conforme especificado. Teste cada funÃ§Ã£o com algumas entradas diferentes.
 */
let name = `Lucas`;
let name2 = `Ana`;

function greet (param) {
    console.log(`Hey ` + param);
}

greet(name);
greet(name2);
/* 
1 - FaÃ§a cinco programas, um para cada operaÃ§Ã£o aritmÃ©tica bÃ¡sica. Seu programa deve ter duas constantes, a e b , definidas no comeÃ§o com os valores que serÃ£o operados. FaÃ§a programas para:
AdiÃ§Ã£o (a + b)
SubtraÃ§Ã£o (a - b)
MultiplicaÃ§Ã£o (a * b)
DivisÃ£o (a / b)
MÃ³dulo (a % b)
*Dica: Neste link vocÃª encontra mais detalhes sobre operadores matemÃ¡ticos ðŸ˜‰
*/

function soma (a,b) {
    return a+b;
}

function divide (a,b) {
    return a/b;
}

function multiplica (a,b) {
    return a*b;
}

function subtrai (a,b) {
    return a-b;
}

function modulo (a,b) {

    return a%b;
}

/*
2 - FaÃ§a um programa que retorne o maior de dois nÃºmeros. Defina no comeÃ§o do programa duas constantes com os valores que serÃ£o comparados.
*/

function maior (a,b) {
    let verifica;
    if (a > b) {
        verifica = a;
    } else {
        verifica = b;
    }
     
    return verifica;
}

/*
3 - FaÃ§a um programa que retorne o maior de trÃªs nÃºmeros. Defina no comeÃ§o do programa trÃªs constantes com os valores que serÃ£o comparados.
*/

function maiorDe3 (a,b,c) {
    let verifica;
    if (a > b && a > c) {
        verifica = a;
    } else if (b > c && b > c){
        verifica = b;
    } else {
        verifica = c;
    }
     
    return verifica;
}

console.log(maiorDe3(25,15,19));

/*
4 - FaÃ§a um programa que, dado um valor definido numa constante, retorne "positive" se esse valor for positivo, "negative" se for negativo e "zero" caso contrÃ¡rio.
*/

function valor (a) {
    if (a > 0) {
        return console.log("positive");
    } else if (a < 0) {
        return console.log("negative");
    } else {
        return console.log("zero");
    }
}

console.log(valor(-1));

/*
5 - FaÃ§a um programa que defina trÃªs constantes com os valores dos trÃªs Ã¢ngulos internos de um triÃ¢ngulo. Retorne true se os Ã¢ngulos representarem os Ã¢ngulos de um triÃ¢ngulo e false , caso contrÃ¡rio. Se algum Ã¢ngulo for invÃ¡lido o programa deve retornar uma mensagem de erro.
* - Para os Ã¢ngulos serem de um triÃ¢ngulo vÃ¡lido, a soma dos trÃªs devem ser 180 graus.
* - Um Ã¢ngulo serÃ¡ considerado invÃ¡lido se nÃ£o tiver um valor positivo.
*/

function triangulo (a,b,c) {
    if (a + b + c == 180) {
        return true
    } else if (a + b + c !== 180) {
        return false
    } else if (a < 1 || b < 1 || c < 1) {
        return false
    }
}

console.log(triangulo(90,45,46))